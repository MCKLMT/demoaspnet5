# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
jobs:
  - job: 'Build'
    displayName: "Build RM Azure Functons"
    pool:
      vmImage: 'ubuntu-latest'

    steps:
        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
            Version: '5.0.100'
            includePreviewVersions: false

        - task: DotNetCoreCLI@2
          displayName: Restore NuGet packages
          inputs:
            command: 'restore'
            projects: '**/*.csproj'

        - task: DotNetCoreCLI@2
          displayName: Build project
          inputs:
            command: 'build'
            projects: '**/*.csproj'

        - task: DotNetCoreCLI@2
          displayName: Publish project
          inputs:
            command: publish
            arguments: '--configuration Release --output publish_output'
            projects: '**/*.csproj'
            publishWebProjects: false
            modifyOutputPath: false
            zipAfterPublish: false

        - task: ArchiveFiles@2
          displayName: Archive project files
          inputs:
            rootFolderOrFile: "$(System.DefaultWorkingDirectory)/publish_output"
            includeRootFolder: false
            archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
          
        - task: PublishBuildArtifacts@1
          displayName: Publish package ready for deployment
          inputs:
            PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
            artifactName: 'drop'